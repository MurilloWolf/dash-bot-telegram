name: üîÑ PR Automation

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  pr-checks:
    name: üìã PR Quality Checks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - name: üì¶ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üèóÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: üì• Install dependencies
        run: npm ci

      - name: üîç Validate PR Title
        uses: amannn/action-semantic-pull-request@v5.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            chore
            ci
            build
          scopes: |
            bot
            core
            infra
            config
            deps
            api
            ui
            docs
          requireScope: false

      - name: üìä PR Size Analysis
        run: |
          echo "Analyzing PR size..."
          CHANGED_FILES=${{ github.event.pull_request.changed_files }}
          ADDITIONS=${{ github.event.pull_request.additions }}
          DELETIONS=${{ github.event.pull_request.deletions }}
          TOTAL_CHANGES=$((ADDITIONS + DELETIONS))
          
          echo "Files changed: $CHANGED_FILES"
          echo "Lines added: +$ADDITIONS"
          echo "Lines deleted: -$DELETIONS"
          echo "Total changes: $TOTAL_CHANGES"
          
          # Determine size label
          SIZE_LABEL=""
          if [ $TOTAL_CHANGES -le 10 ]; then
            SIZE_LABEL="size/XS"
          elif [ $TOTAL_CHANGES -le 50 ]; then
            SIZE_LABEL="size/S"
          elif [ $TOTAL_CHANGES -le 200 ]; then
            SIZE_LABEL="size/M"
          elif [ $TOTAL_CHANGES -le 500 ]; then
            SIZE_LABEL="size/L"
          else
            SIZE_LABEL="size/XL"
          fi
          
          echo "PR size: $SIZE_LABEL"
          
          # Add label using GitHub CLI
          gh pr edit ${{ github.event.pull_request.number }} --add-label "$SIZE_LABEL"
          
          # Warning for XL PRs
          if [ "$SIZE_LABEL" = "size/XL" ]; then
            echo "‚ö†Ô∏è This PR is very large. Consider breaking it down into smaller PRs."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Auto Label
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/labeler.yml

      - name: üìù Generate PR Description
        if: github.event.action == 'opened'
        uses: peter-evans/create-or-update-comment@v5
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## üîç PR Analysis

            **Files Changed:** ${{ github.event.pull_request.changed_files }}
            **Lines Added:** +${{ github.event.pull_request.additions }}
            **Lines Removed:** -${{ github.event.pull_request.deletions }}

            ### üìã Checklist
            - [ ] Tests added/updated
            - [ ] Documentation updated
            - [ ] Breaking changes documented
            - [ ] Ready for review

            ### üß™ Testing Instructions
            Please provide instructions on how to test this PR.

            ---
            *This comment was automatically generated by GitHub Actions*

  pr-review-assignment:
    name: üë• Review Assignment
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: üë• Auto Assign Reviewers
        run: |
          echo "Auto-assigning reviewers..."
          gh pr edit ${{ github.event.pull_request.number }} --add-reviewer "murillowolfcavalheiro"
          echo "‚úÖ Reviewer assigned: murillowolfcavalheiro"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-merge-conditions:
    name: ‚úÖ Merge Conditions
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
      pull-requests: write
      checks: read

    steps:
      - name: ‚úÖ Check PR Status
        run: |
          echo "Checking if PR is ready for merge..."
          echo "Draft: ${{ github.event.pull_request.draft }}"
          echo "Labels: ${{ join(github.event.pull_request.labels.*.name, ', ') }}"
          
          # Check if PR is not a draft
          if [ "${{ github.event.pull_request.draft }}" = "true" ]; then
            echo "‚ùå PR is still a draft"
            exit 1
          fi
          
          # Check for blocking labels
          if echo "${{ join(github.event.pull_request.labels.*.name, ' ') }}" | grep -q "work-in-progress\|do-not-merge"; then
            echo "‚ùå PR has blocking labels"
            exit 1
          fi
          
          echo "‚úÖ PR is ready for merge checks"

  auto-merge:
    name: ü§ñ Auto Merge
    runs-on: ubuntu-latest
    needs: [pr-checks, pr-merge-conditions]
    if: |
      github.event.pull_request.draft == false &&
      contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
      github.actor == 'dependabot[bot]'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: ü§ñ Auto merge dependabot PRs
        uses: pascalgn/auto-merge-action@v0.16.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash
          merge_commit_message: automatic
